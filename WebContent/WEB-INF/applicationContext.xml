<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:ws="http://jax-ws.dev.java.net/spring/core"
       xmlns:wss="http://jax-ws.dev.java.net/spring/servlet"
	   xsi:schemaLocation=
	   		"http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
            http://jax-ws.dev.java.net/spring/core   
            http://jax-ws.dev.java.net/spring/core.xsd
   			http://jax-ws.dev.java.net/spring/servlet   
   			http://jax-ws.dev.java.net/spring/servlet.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.2.xsd"
     		default-lazy-init="true">
	
	<bean id="inventorySEP" class="com.mindtree.mcse.mobilemall.ws.InventoryServiceEndPoint">
		<property name="inventoryDao" ref="inventoryDao"></property>
		<property name="itemDao" ref="itemDao"></property>
	</bean>
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- Exposing WS using JAX-WS Spring Util -->	
     <wss:binding url="/WS/InventoryService" >
        <wss:service>
            <ws:service bean="#inventorySEP"/>
        </wss:service>
    </wss:binding>
    
     <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>

	
	<!-- Hibernate SessionFactory Definition -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.c3p0.min_size">5</prop>
			    <prop key="hibernate.c3p0.max_size">20</prop>
			    <prop key="hibernate.c3p0.timeout">300</prop>
			    <prop key="hibernate.c3p0.max_statements">50</prop>
			    <prop key="hibernate.c3p0.idle_test_period">3000</prop>
			</props>
		</property>
		
		<property name="mappingResources">
			<list>
				<value>com/mindtree/mcse/mobilemall/dao/hibernate/config/Item.hbm.xml</value>		
				<value>com/mindtree/mcse/mobilemall/dao/hibernate/config/Product.hbm.xml</value>	
				<value>com/mindtree/mcse/mobilemall/dao/hibernate/config/Inventory.hbm.xml</value>
				<value>com/mindtree/mcse/mobilemall/dao/hibernate/config/Review.hbm.xml</value>
			</list>
		</property>
	</bean>
	
	
	<!-- Spring Data Access Exception Translator Defintion -->
	<bean id="jdbcExceptionTranslator" class="org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator"> 
		<property name="dataSource"><ref bean="dataSource"/></property> 
	</bean> 

	<!-- Hibernate Template Defintion -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate"> 
		<property name="sessionFactory"><ref bean="sessionFactory"/></property> 
		<property name="jdbcExceptionTranslator"><ref bean="jdbcExceptionTranslator"/></property> 
	</bean> 

	<!-- Hibernate DAO's Defintion -->
	
	<bean id="inventoryDao" class="com.mindtree.mcse.mobilemall.dao.hibernate.InventoryDaoHibernateImpl">
		<property name="hibernateTemplate"><ref bean="hibernateTemplate"/></property> 
	</bean>	
	
	<bean id="itemDao" class="com.mindtree.mcse.mobilemall.dao.hibernate.ItemDaoHibernateImpl">
		<property name="hibernateTemplate"><ref bean="hibernateTemplate"/></property> 
	</bean>	
    		
</beans>


